// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jainritik/email-otp/models (interfaces: OTPStorageInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockOTPStorageInterface is a mock of OTPStorageInterface interface.
type MockOTPStorageInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOTPStorageInterfaceMockRecorder
}

// MockOTPStorageInterfaceMockRecorder is the mock recorder for MockOTPStorageInterface.
type MockOTPStorageInterfaceMockRecorder struct {
	mock *MockOTPStorageInterface
}

// NewMockOTPStorageInterface creates a new mock instance.
func NewMockOTPStorageInterface(ctrl *gomock.Controller) *MockOTPStorageInterface {
	mock := &MockOTPStorageInterface{ctrl: ctrl}
	mock.recorder = &MockOTPStorageInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOTPStorageInterface) EXPECT() *MockOTPStorageInterfaceMockRecorder {
	return m.recorder
}

// ClearOTP mocks base method.
func (m *MockOTPStorageInterface) ClearOTP(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ClearOTP", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ClearOTP indicates an expected call of ClearOTP.
func (mr *MockOTPStorageInterfaceMockRecorder) ClearOTP(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClearOTP", reflect.TypeOf((*MockOTPStorageInterface)(nil).ClearOTP), arg0)
}

// GetOTP mocks base method.
func (m *MockOTPStorageInterface) GetOTP(arg0 string) (string, time.Time, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOTP", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(time.Time)
	ret2, _ := ret[2].(bool)
	ret3, _ := ret[3].(error)
	return ret0, ret1, ret2, ret3
}

// GetOTP indicates an expected call of GetOTP.
func (mr *MockOTPStorageInterfaceMockRecorder) GetOTP(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOTP", reflect.TypeOf((*MockOTPStorageInterface)(nil).GetOTP), arg0)
}

// StoreOTP mocks base method.
func (m *MockOTPStorageInterface) StoreOTP(arg0, arg1 string, arg2 time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreOTP", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// StoreOTP indicates an expected call of StoreOTP.
func (mr *MockOTPStorageInterfaceMockRecorder) StoreOTP(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreOTP", reflect.TypeOf((*MockOTPStorageInterface)(nil).StoreOTP), arg0, arg1, arg2)
}
